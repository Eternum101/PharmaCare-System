//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PharmaCare.HospitalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorAddress {
            get {
                return this.DoctorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorAddressField, value) != true)) {
                    this.DoctorAddressField = value;
                    this.RaisePropertyChanged("DoctorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorCity {
            get {
                return this.DoctorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorCityField, value) != true)) {
                    this.DoctorCityField = value;
                    this.RaisePropertyChanged("DoctorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorID {
            get {
                return this.DoctorIDField;
            }
            set {
                if ((this.DoctorIDField.Equals(value) != true)) {
                    this.DoctorIDField = value;
                    this.RaisePropertyChanged("DoctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorName {
            get {
                return this.DoctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNameField, value) != true)) {
                    this.DoctorNameField = value;
                    this.RaisePropertyChanged("DoctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorZip {
            get {
                return this.DoctorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorZipField, value) != true)) {
                    this.DoctorZipField = value;
                    this.RaisePropertyChanged("DoctorZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speciality {
            get {
                return this.SpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialityField, value) != true)) {
                    this.SpecialityField = value;
                    this.RaisePropertyChanged("Speciality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/HospitalService")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WardIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorID {
            get {
                return this.DoctorIDField;
            }
            set {
                if ((this.DoctorIDField.Equals(value) != true)) {
                    this.DoctorIDField = value;
                    this.RaisePropertyChanged("DoctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAddress {
            get {
                return this.PatientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAddressField, value) != true)) {
                    this.PatientAddressField = value;
                    this.RaisePropertyChanged("PatientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientCity {
            get {
                return this.PatientCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientCityField, value) != true)) {
                    this.PatientCityField = value;
                    this.RaisePropertyChanged("PatientCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientType {
            get {
                return this.PatientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientTypeField, value) != true)) {
                    this.PatientTypeField = value;
                    this.RaisePropertyChanged("PatientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientZip {
            get {
                return this.PatientZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientZipField, value) != true)) {
                    this.PatientZipField = value;
                    this.RaisePropertyChanged("PatientZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WardID {
            get {
                return this.WardIDField;
            }
            set {
                if ((this.WardIDField.Equals(value) != true)) {
                    this.WardIDField = value;
                    this.RaisePropertyChanged("WardID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HospitalService.IHospitalService")]
    public interface IHospitalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getDoctor", ReplyAction="http://tempuri.org/IHospitalService/getDoctorResponse")]
        PharmaCare.HospitalService.Doctor getDoctor(int did);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getDoctor", ReplyAction="http://tempuri.org/IHospitalService/getDoctorResponse")]
        System.Threading.Tasks.Task<PharmaCare.HospitalService.Doctor> getDoctorAsync(int did);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatient", ReplyAction="http://tempuri.org/IHospitalService/getPatientResponse")]
        PharmaCare.HospitalService.Patient getPatient(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatient", ReplyAction="http://tempuri.org/IHospitalService/getPatientResponse")]
        System.Threading.Tasks.Task<PharmaCare.HospitalService.Patient> getPatientAsync(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatientByName", ReplyAction="http://tempuri.org/IHospitalService/getPatientByNameResponse")]
        PharmaCare.HospitalService.Patient getPatientByName(string pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/getPatientByName", ReplyAction="http://tempuri.org/IHospitalService/getPatientByNameResponse")]
        System.Threading.Tasks.Task<PharmaCare.HospitalService.Patient> getPatientByNameAsync(string pname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitalServiceChannel : PharmaCare.HospitalService.IHospitalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitalServiceClient : System.ServiceModel.ClientBase<PharmaCare.HospitalService.IHospitalService>, PharmaCare.HospitalService.IHospitalService {
        
        public HospitalServiceClient() {
        }
        
        public HospitalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PharmaCare.HospitalService.Doctor getDoctor(int did) {
            return base.Channel.getDoctor(did);
        }
        
        public System.Threading.Tasks.Task<PharmaCare.HospitalService.Doctor> getDoctorAsync(int did) {
            return base.Channel.getDoctorAsync(did);
        }
        
        public PharmaCare.HospitalService.Patient getPatient(int pid) {
            return base.Channel.getPatient(pid);
        }
        
        public System.Threading.Tasks.Task<PharmaCare.HospitalService.Patient> getPatientAsync(int pid) {
            return base.Channel.getPatientAsync(pid);
        }
        
        public PharmaCare.HospitalService.Patient getPatientByName(string pname) {
            return base.Channel.getPatientByName(pname);
        }
        
        public System.Threading.Tasks.Task<PharmaCare.HospitalService.Patient> getPatientByNameAsync(string pname) {
            return base.Channel.getPatientByNameAsync(pname);
        }
    }
}
